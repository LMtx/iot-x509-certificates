#!/bin/bash

echo """
Hello inside the my_private_ca container!

This CA (Certificate Authority) is going to be the root of trust for our system.
We will use it to sign certificates for devices.

Let's start with generating the PK (Private Key) to be used by our CA:

    openssl genrsa -out /root/ca/secret/ca.key 4096

We can check our PK using following command:

    openssl rsa -check -in /root/ca/secret/ca.key

Based on this PK we will create a self-signed certificate for our CA.

    openssl req -new -x509 -days 360 -key /root/ca/secret/ca.key -out /root/ca/certificate/ca.pem -subj \"/CN=my_private_ca\"

Let's see how this certificate looks like:

    openssl x509 -in /root/ca/certificate/ca.pem -text

We can check the setup of you CA:

    ls --recursive -l .

---

CA is ready, let's switch to the MQTT Broker container.

---

Our MQTT Broker has provided a CSR.

Create certificate for the MQTT Broker based on the CSR generated by that client:

    openssl x509 -req -in /var/csr/mq/mq_broker.csr -CA /root/ca/certificate/ca.pem -CAkey /root/ca/secret/ca.key -CAcreateserial -CAserial /root/ca/secret/ca.srl -out /var/csr/mq/mq_broker.pem -days 360

---

Let's switch back to the MQTT Broker container.

---

Our Clients have provided CSRs, let's create certificates for them.

Client A:
    openssl x509 -req -in /var/csr/client_a/client_a.csr -CA /root/ca/certificate/ca.pem -CAkey /root/ca/secret/ca.key -CAcreateserial -CAserial /root/ca/secret/ca.srl -out /var/csr/client_a/client_a.pem -days 360

Client B:
    openssl x509 -req -in /var/csr/client_b/client_b.csr -CA /root/ca/certificate/ca.pem -CAkey /root/ca/secret/ca.key -CAcreateserial -CAserial /root/ca/secret/ca.srl -out /var/csr/client_b/client_b.pem -days 360

---

We are done with CA, let's switch to the MQTT Broker.

"""

bash